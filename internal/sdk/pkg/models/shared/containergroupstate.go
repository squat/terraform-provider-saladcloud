// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/squat/terraform-provider-saladcloud/internal/sdk/pkg/utils"
	"time"
)

// ContainerGroupState - Represents a container group state
type ContainerGroupState struct {
	Description *string   `json:"description,omitempty"`
	FinishTime  time.Time `json:"finish_time"`
	// Represents a container group instance status count
	InstanceStatusCount ContainerGroupInstanceStatusCount `json:"instance_status_count"`
	StartTime           time.Time                         `json:"start_time"`
	Status              ContainerGroupStatus              `json:"status"`
}

func (c ContainerGroupState) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ContainerGroupState) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ContainerGroupState) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ContainerGroupState) GetFinishTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.FinishTime
}

func (o *ContainerGroupState) GetInstanceStatusCount() ContainerGroupInstanceStatusCount {
	if o == nil {
		return ContainerGroupInstanceStatusCount{}
	}
	return o.InstanceStatusCount
}

func (o *ContainerGroupState) GetStartTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartTime
}

func (o *ContainerGroupState) GetStatus() ContainerGroupStatus {
	if o == nil {
		return ContainerGroupStatus("")
	}
	return o.Status
}
