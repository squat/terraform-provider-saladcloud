// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/squat/terraform-provider-saladcloud/internal/sdk/pkg/utils"
	"time"
)

// ContainerGroup - Represents a container group
type ContainerGroup struct {
	AutostartPolicy bool `json:"autostart_policy"`
	// Represents a container
	Container    Container     `json:"container"`
	CountryCodes []CountryCode `json:"country_codes,omitempty"`
	CreateTime   time.Time     `json:"create_time"`
	// Represents a container group state
	CurrentState ContainerGroupState `json:"current_state"`
	DisplayName  string              `json:"display_name"`
	ID           string              `json:"id"`
	// Represents container group probe
	LivenessProbe *ContainerGroupProbe `json:"liveness_probe,omitempty"`
	Name          string               `json:"name"`
	// Represents container group networking parameters
	Networking *ContainerGroupNetworking `json:"networking,omitempty"`
	// Represents container group probe
	ReadinessProbe *ContainerGroupProbe   `json:"readiness_probe,omitempty"`
	Replicas       int64                  `json:"replicas"`
	RestartPolicy  ContainerRestartPolicy `json:"restart_policy"`
	// Represents container group probe
	StartupProbe *ContainerGroupProbe `json:"startup_probe,omitempty"`
	UpdateTime   time.Time            `json:"update_time"`
}

func (c ContainerGroup) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ContainerGroup) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ContainerGroup) GetAutostartPolicy() bool {
	if o == nil {
		return false
	}
	return o.AutostartPolicy
}

func (o *ContainerGroup) GetContainer() Container {
	if o == nil {
		return Container{}
	}
	return o.Container
}

func (o *ContainerGroup) GetCountryCodes() []CountryCode {
	if o == nil {
		return nil
	}
	return o.CountryCodes
}

func (o *ContainerGroup) GetCreateTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreateTime
}

func (o *ContainerGroup) GetCurrentState() ContainerGroupState {
	if o == nil {
		return ContainerGroupState{}
	}
	return o.CurrentState
}

func (o *ContainerGroup) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *ContainerGroup) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ContainerGroup) GetLivenessProbe() *ContainerGroupProbe {
	if o == nil {
		return nil
	}
	return o.LivenessProbe
}

func (o *ContainerGroup) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ContainerGroup) GetNetworking() *ContainerGroupNetworking {
	if o == nil {
		return nil
	}
	return o.Networking
}

func (o *ContainerGroup) GetReadinessProbe() *ContainerGroupProbe {
	if o == nil {
		return nil
	}
	return o.ReadinessProbe
}

func (o *ContainerGroup) GetReplicas() int64 {
	if o == nil {
		return 0
	}
	return o.Replicas
}

func (o *ContainerGroup) GetRestartPolicy() ContainerRestartPolicy {
	if o == nil {
		return ContainerRestartPolicy("")
	}
	return o.RestartPolicy
}

func (o *ContainerGroup) GetStartupProbe() *ContainerGroupProbe {
	if o == nil {
		return nil
	}
	return o.StartupProbe
}

func (o *ContainerGroup) GetUpdateTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdateTime
}
