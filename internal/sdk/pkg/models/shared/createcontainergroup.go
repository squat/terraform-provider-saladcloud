// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// CreateContainerGroup - Represents a request to create a container group
type CreateContainerGroup struct {
	// Represents a container
	Container    CreateContainer `json:"container"`
	CountryCodes []CountryCode   `json:"country_codes,omitempty"`
	DisplayName  *string         `json:"display_name,omitempty"`
	// Represents container group probe
	LivenessProbe *ContainerGroupProbe `json:"liveness_probe,omitempty"`
	Name          string               `json:"name"`
	// Represents container group networking parameters
	Networking *CreateContainerGroupNetworking `json:"networking,omitempty"`
	// Represents container group probe
	ReadinessProbe *ContainerGroupProbe   `json:"readiness_probe,omitempty"`
	Replicas       int64                  `json:"replicas"`
	RestartPolicy  ContainerRestartPolicy `json:"restart_policy"`
	// Represents container group probe
	StartupProbe *ContainerGroupProbe `json:"startup_probe,omitempty"`
}

func (o *CreateContainerGroup) GetContainer() CreateContainer {
	if o == nil {
		return CreateContainer{}
	}
	return o.Container
}

func (o *CreateContainerGroup) GetCountryCodes() []CountryCode {
	if o == nil {
		return nil
	}
	return o.CountryCodes
}

func (o *CreateContainerGroup) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *CreateContainerGroup) GetLivenessProbe() *ContainerGroupProbe {
	if o == nil {
		return nil
	}
	return o.LivenessProbe
}

func (o *CreateContainerGroup) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateContainerGroup) GetNetworking() *CreateContainerGroupNetworking {
	if o == nil {
		return nil
	}
	return o.Networking
}

func (o *CreateContainerGroup) GetReadinessProbe() *ContainerGroupProbe {
	if o == nil {
		return nil
	}
	return o.ReadinessProbe
}

func (o *CreateContainerGroup) GetReplicas() int64 {
	if o == nil {
		return 0
	}
	return o.Replicas
}

func (o *CreateContainerGroup) GetRestartPolicy() ContainerRestartPolicy {
	if o == nil {
		return ContainerRestartPolicy("")
	}
	return o.RestartPolicy
}

func (o *CreateContainerGroup) GetStartupProbe() *ContainerGroupProbe {
	if o == nil {
		return nil
	}
	return o.StartupProbe
}
