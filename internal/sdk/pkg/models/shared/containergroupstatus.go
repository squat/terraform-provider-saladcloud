// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ContainerGroupStatus string

const (
	ContainerGroupStatusPending   ContainerGroupStatus = "pending"
	ContainerGroupStatusRunning   ContainerGroupStatus = "running"
	ContainerGroupStatusStopped   ContainerGroupStatus = "stopped"
	ContainerGroupStatusSucceeded ContainerGroupStatus = "succeeded"
	ContainerGroupStatusFailed    ContainerGroupStatus = "failed"
	ContainerGroupStatusDeploying ContainerGroupStatus = "deploying"
)

func (e ContainerGroupStatus) ToPointer() *ContainerGroupStatus {
	return &e
}

func (e *ContainerGroupStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "running":
		fallthrough
	case "stopped":
		fallthrough
	case "succeeded":
		fallthrough
	case "failed":
		fallthrough
	case "deploying":
		*e = ContainerGroupStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContainerGroupStatus: %v", v)
	}
}
