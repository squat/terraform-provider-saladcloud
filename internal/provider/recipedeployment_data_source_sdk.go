// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/squat/terraform-provider-saladcloud/internal/sdk/pkg/models/shared"
	"time"
)

func (r *RecipeDeploymentDataSourceModel) RefreshFromGetResponse(resp *shared.RecipeDeployment) {
	if resp.CurrentState.Description != nil {
		r.CurrentState.Description = types.StringValue(*resp.CurrentState.Description)
	} else {
		r.CurrentState.Description = types.StringNull()
	}
	r.CurrentState.FinishTime = types.StringValue(resp.CurrentState.FinishTime.Format(time.RFC3339Nano))
	r.CurrentState.InstanceStatusCount.AllocatingCount = types.Int64Value(resp.CurrentState.InstanceStatusCount.AllocatingCount)
	r.CurrentState.InstanceStatusCount.CreatingCount = types.Int64Value(resp.CurrentState.InstanceStatusCount.CreatingCount)
	r.CurrentState.InstanceStatusCount.RunningCount = types.Int64Value(resp.CurrentState.InstanceStatusCount.RunningCount)
	r.CurrentState.StartTime = types.StringValue(resp.CurrentState.StartTime.Format(time.RFC3339Nano))
	r.CurrentState.Status = types.StringValue(string(resp.CurrentState.Status))
	r.DisplayName = types.StringValue(resp.DisplayName)
	r.ID = types.StringValue(resp.ID)
	r.Name = types.StringValue(resp.Name)
	if resp.Networking == nil {
		r.Networking = nil
	} else {
		r.Networking = &ContainerGroupNetworking{}
		r.Networking.Auth = types.BoolValue(resp.Networking.Auth)
		r.Networking.DNS = types.StringValue(resp.Networking.DNS)
		r.Networking.Port = types.Int64Value(resp.Networking.Port)
		r.Networking.Protocol = types.StringValue(string(resp.Networking.Protocol))
	}
	r.Recipe.ID = types.StringValue(resp.Recipe.ID)
	r.Recipe.Name = types.StringValue(resp.Recipe.Name)
	if resp.Recipe.Networking == nil {
		r.Recipe.Networking = nil
	} else {
		r.Recipe.Networking = &ContainerGroupNetworking{}
		r.Recipe.Networking.Auth = types.BoolValue(resp.Recipe.Networking.Auth)
		r.Recipe.Networking.DNS = types.StringValue(resp.Recipe.Networking.DNS)
		r.Recipe.Networking.Port = types.Int64Value(resp.Recipe.Networking.Port)
		r.Recipe.Networking.Protocol = types.StringValue(string(resp.Recipe.Networking.Protocol))
	}
	r.Recipe.Readme = types.StringValue(resp.Recipe.Readme)
	if resp.Recipe.Resources == nil {
		r.Recipe.Resources = nil
	} else {
		r.Recipe.Resources = &RecipeResources{}
		r.Recipe.Resources.CPU = types.Int64Value(resp.Recipe.Resources.CPU)
		r.Recipe.Resources.GpuClass = types.StringValue(resp.Recipe.Resources.GpuClass)
		r.Recipe.Resources.RAM = types.Int64Value(resp.Recipe.Resources.RAM)
	}
	r.Replicas = types.Int64Value(resp.Replicas)
}
